# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ main, user_interface ]
  pull_request:
    branches: [ main, user_interface ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.6
      uses: actions/setup-python@v2
      with:
        python-version: 3.6
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest wheel
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: fbs run test
      run: |
        fbs run &>procOut &
        if grep -q "Error" procOut; then cat procOut; exit 1; else kill $!; fi
        
  test:
    name: Import test
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [3.6]
        os: [windows-latest, macOS-latest, ubuntu-latest]
    steps:
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Download wheel
      uses: actions/download-artifact@v2
      with:
        name: wheel
    - name: Install wntr
      run: |
        python -m pip install --upgrade pip
        pip install wheel
        pup install --find-links=. wntr
    - name: Import wntr test
      run: |
        python -c "import wntr"
        
    # Next -- 'import' and run fbs to test
    
# Windows run test -- needs work    
#  windows:
#    runs-on: ${{ matrix.os }}
#    strategy:
#      matrix:
#        python-version: [3.6]
#        os: [windows-latest]
#    steps:
#    - uses: actions/checkout@v2
#    - name: Set up Python ${{ matrix.python-version }}
#      uses: actions/setup-python@v2
#      with:
#        python-version: ${{ matrix.python-version }}
#    - name: Install dependencies
#      run: |
#        python --version
#        python -m pip install --upgrade pip
#        pip install -r requirements.txt
#    - name: fbs run test
#      run: |
#        Start-Process fbs run &>procOut &
#        if(Get-Process "fbs") { Get-Process "fbs" | Stop-Process -Force } else { }
#        
        
